
controllers refactor with new View
---

phpunit
http://www.baluart.net/articulo/introduccion-a-las-pruebas-unitarias-en-php-con-phpunit
https://jtreminio.com/2013/03/unit-testing-tutorial-introduction-to-phpunit/
http://phpunit.de/manual/3.8/en/index.html
https://www.youtube.com/watch?v=Iq6wvboGU-A
https://www.youtube.com/watch?v=4BXpi7056RM
---

custom urls
a configuration file where you can do
array(
    'custom_url.htm'    => array($controller, $method)
)
---


contextual help with \PDO p.e.
this can be achieved with phpdoc (using types in: @return, @var, @param)
phpdoc for every class
---

=======
modules
=======

with modules we have 2 options

zf1 like:
--------

	- bootstrap is loaded in route when you know the module


	each module is a separate application

	we have to choose an application to run and then the normal route()
		it can be done looking at url for module name
		but if we have custom url's =>
			we have to have a conf file where load first custom url's from every module

	FrontController will works as it does now
		so we need an intermediate step in application to select the module

	Every module bootstrap will extends an application bootstrap were common resources to all modules will be loaded

	index.php -> new app() ->
					private $module; //new property in application

					we now do the bootstrap require in Application constructor

							_getModuleFromUrl($url)
								$this->module =
								return $url slice
								this file can look for custom urls in that module
						   ->

						   	bootstrap()

						   	in module bootstrap we create a resource with the module name

    default module

zf2 like:

    modules are plug&play
---

orm integration
---

http://www.mindmeister.com/es/education
---

event driven programming
http://youtu.be/_UipYmC8foU
http://youtu.be/4rRa-bB5kTA
http://agafix.org/a-practical-guide-to-event-driven-programming-with-php/
---

xen\translate
---

Bootstrap

We have implemented Bootsrap as a Service Locator which has all the dependencies that any object would require
The 'problem' or not? is we have to pass the Service Locator across the Classes Tree to he leafs
One solution is to use a DI Container Framework like Auryn or Pimple (from Symfony)
TODO: Learn about Auryn works and try to implement it in xenFramework
---


---------------
Design patterns
---------------
http://www.michael-pratt.com/blog/13/Patrones-de-Diseno-Inyeccion-de-Dependencias/
http://www.imaginanet.com/blog/inyeccion-de-dependencias.html
[*]http://www.davegardner.me.uk/blog/2009/11/23/php-dependency-strategies-dependency-injection-and-service-locator/
http://www.youtube.com/watch?v=DcNtg4_i-2w
http://www.youtube.com/watch?v=IKD2-MAkXyQ&feature=share&list=PLM-218uGSX3DQ3KsB5NJnuOqPqc5CW2kW&index=2
http://krasimirtsonev.com/blog/article/Dependency-Injection-in-PHP-example-how-to-DI-create-your-own-dependency-injection-container
http://youtu.be/_LBwpUwDBis
https://www.youtube.com/watch?v=Hm2fTv9wikI
http://www.easylearntutorial.com/
https://www.youtube.com/user/easylearntutorial/videos?view=1&flow=grid
http://devzone.zend.com/1732/implementing-the-observer-pattern-with-splobserver-and-splsubject/

-------
symfony
-------
http://www.youtube.com/watch?v=fqXKZxo9Qb4

-------
zf2
-------
http://www.youtube.com/playlist?list=PLERcn8f9DIyjK61qQMEqnWo2FfPvt7XYA





-----------
Annotations
-----------

We do not create models in FrontController because models are out of reach. They are part of the application logic and
we do not know nothing about it.
---

I think ini_set does not work if variables are already setted in php.ini
---

xenFramework made by programmers for programmers
xenFramework is what it was expected for zf to be to a programmer
easy to learn, easy to use, intuitive, fast, no magic methods, no globals, no singletons, ...
NO MAGIC => everything is under your control, EXPLICIT

i.e. you can render a view from any controller

=========
Design Patterns
=========
http://www.maltblue.com/tutorial/zend-framework-2-event-manager-a-gentle-introduction

Dependency Injection
    http://www.davegardner.me.uk/blog/2009/11/23/php-dependency-strategies-dependency-injection-and-service-locator/
    https://www.youtube.com/watch?v=egONoRg_Gjg&list=PLGJDCzBP5j3y3uxsElO_HYvPpkjnu-UNW
IoC
Service Locator
Subject/Observer
Factory
